// <auto-generated />
using BeerQuest.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeerQuest.Infrastructure.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20240412212030_AddVenues")]
    partial class AddVenues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("BeerQuest.Domain.Entities.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Venues", (string)null);
                });

            modelBuilder.Entity("BeerQuest.Domain.Entities.Venue", b =>
                {
                    b.OwnsOne("BeerQuest.Domain.ValueTypes.ContactDetails", "ContactDetails", b1 =>
                        {
                            b1.Property<int>("VenueId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(15)
                                .HasColumnType("TEXT");

                            b1.Property<string>("TwitterHandle")
                                .HasMaxLength(50)
                                .HasColumnType("TEXT");

                            b1.HasKey("VenueId");

                            b1.ToTable("Venues");

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.OwnsOne("BeerQuest.Domain.ValueTypes.Location", "Location", b1 =>
                        {
                            b1.Property<int>("VenueId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Latitude")
                                .HasPrecision(10, 8)
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Longitude")
                                .HasPrecision(10, 8)
                                .HasColumnType("TEXT");

                            b1.HasKey("VenueId");

                            b1.ToTable("Venues");

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.OwnsOne("BeerQuest.Domain.ValueTypes.Rating", "Rating", b1 =>
                        {
                            b1.Property<int>("VenueId")
                                .HasColumnType("INTEGER");

                            b1.Property<decimal>("Amenities")
                                .HasPrecision(2, 1)
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Atmosphere")
                                .HasPrecision(2, 1)
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Beer")
                                .HasPrecision(2, 1)
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Value")
                                .HasPrecision(2, 1)
                                .HasColumnType("TEXT");

                            b1.HasKey("VenueId");

                            b1.ToTable("Venues");

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.Navigation("ContactDetails")
                        .IsRequired();

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Rating")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
